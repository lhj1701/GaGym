import React from "react";
import Head from "next/head";
import styles from "../../../styles/mypage.module.css";
import { useRouter } from "next/router";
import { AppDispatch, RootState } from "../../../provider";
import { useEffect } from "react";
import { useDispatch, useSelector } from "react-redux";
import "bootstrap/dist/css/bootstrap.min.css";
import AppBar from "../../../components/appbar"
import { ReservationItem } from "../../../provider/modules/reservation";
import {
  requestFetchReservationItem,
  requestRemoveReservationNext,
  // requestRemoveReservationPaging,
} from "../../../middleware/modules/reservation";
import Index from "../..";
import { iteratorSymbol } from "immer/dist/internal";


interface HomeProp {
  home: Home;
}

interface Home {
  userId: number;
  id: number;
  title: string;
  completed: boolean;
}

const mypage = ({ home }: HomeProp) => {
  const router = useRouter();
  const dispatch = useDispatch<AppDispatch>();
  const reservation = useSelector((state: RootState) => state.reservation);
  return (
    <div>
      <AppBar />

      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main} style={{ width: "60vw" }}>
        <div className={styles.div}>
          {/*진행중인 예약내역*/}
          <div className="d-flex mx-auto">
            <p className={styles.p}>진행중인 예약내역</p>
          </div>
          <table className="table ">
            <thead>
              <th>내 지역</th>
              <th>헬스장 명</th>
              <th>예약번호</th>
              <th>구매한 이용권</th>
              <th>남은 횟수</th>
            </thead>
            <tbody>
              <tr>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
              </tr>
            </tbody>
          </table>
          {/*예약내역*/}
          <div className="d-flex mt-5">
            <p className={styles.p}>예약내역</p>
          </div>
          <table className="table">
            <thead>
              <th>예약번호</th>
              <th>헬스장 명</th>
              <th>강사 명</th>
              <th>이용권</th>
              <th>이용가격</th>
              <th>비고</th>
              <th>상세보기</th>
            </thead>
            <tbody>
              <tr style={{ cursor:"pointer" }}>
                <td>{}</td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td><button
              type="button"
              className="btn btn-secondary btn-sm"
              onClick={() => {
                router.push("../mypage/myreservation/detail/${item.reservationNumber}");
              }}>
              상세보기
            </button></td>
              </tr>
            </tbody>
          </table>
          {/*>PT일지 목록*/}
          <div className="d-flex mt-5">
            <p className={styles.p}>PT일지 목록</p>
            <button
              type="button"
              className="btn btn-secondary btn-sm mx-4"
              style={{ width: "80px;", height: "30px" }}
              onClick={() => {
                router.push("./diary/diary-list");
              }}
            >
              상세보기
            </button>
          </div>
          <table className="table">
            <thead>
              <th>일자</th>
              <th>식단내용</th>
              <th>운동내용</th>
              <th>문의사항</th>
              <th>담당강사</th>
              <th>강사피드백</th>
            </thead>
            <tbody>
              <tr>
                <td>10/25</td>
                <td>(아침) 고구마/우유</td>
                <td>PT + 런닝2시간</td>
                <td>-</td>
                <td>-</td>
                <td>미완료</td>
              </tr>
              <tr>
                <td>10/25</td>
                <td>(아침) 고구마/우유</td>
                <td>PT + 런닝2시간</td>
                <td>-</td>
                <td>-</td>
                <td>미완료</td>
              </tr>
            </tbody>
          </table>
        </div>
      </main>

      <footer className={styles.footer}></footer>
    </div>
  );
};

// 여기 함수부분의 코드를 실행하여 반환 값을 컴포넌트 속성을 넣어줌

export async function getServerSideProps() {
  // const res = await fetch("https://jsonplaceholder.typicode.com/users/1");

  // const home: Home = await res.json();

  const reservation = [
    {
      "id": 1,
      "name": "Leanne Graham",
      "username": "Bret",
      "email": "Sincere@april.biz",
      "address": {
        "street": "Kulas Light",
        "suite": "Apt. 556",
        "city": "Gwenborough",
        "zipcode": "92998-3874",
        "geo": {
          "lat": "-37.3159",
          "lng": "81.1496"
        }
      },
      "phone": "1-770-736-8031 x56442",
      "website": "hildegard.org",
      "company": {
        "name": "Romaguera-Crona",
        "catchPhrase": "Multi-layered client-server neural-net",
        "bs": "harness real-time e-markets"
      }
    },
    {
      "id": 2,
      "name": "Ervin Howell",
      "username": "Antonette",
      "email": "Shanna@melissa.tv",
      "address": {
        "street": "Victor Plains",
        "suite": "Suite 879",
        "city": "Wisokyburgh",
        "zipcode": "90566-7771",
        "geo": {
          "lat": "-43.9509",
          "lng": "-34.4618"
        }
      },
      "phone": "010-692-6593 x09125",
      "website": "anastasia.net",
      "company": {
        "name": "Deckow-Crist",
        "catchPhrase": "Proactive didactic contingency",
        "bs": "synergize scalable supply-chains"
      }
    },
  ]
  // 여기에 prop: {속성객체}

  // 속성객체를 컴포넌트의 속성을 넣어줌

  return { props: { reservation } };
}

export default mypage;